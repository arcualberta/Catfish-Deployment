{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./wwwroot/assets/js/catfish.edititem.js"],"names":["document","getElementById","Vue","component","props","data","inputTypes","fieldRequiredLabel","valueLabel","deleteLabel","testField","Values","Type","methods","addNewValue","newEntry","JSON","parse","stringify","Id","uuidv1","Value","splice","length","deleteField","mounted","fieldData","$values","hasOwnProperty","$type","created","StaticItems","managerSideValues","editItemLabels","FIELD_REQUIRED_LABEL","VALUE_LABEL","DELETE_LABEL","template","piranha","itemlist","el","getString","postString","content","loading","item","itemId","nameAttribute","descriptionAttribute","buttonOptions","mcDropdownButtonLabel","activeOption","languages","en","fr","sp","DEFAULT_LANGUAGE","languageLabels","sections","title","metadataSets","metadataSets_type","metadataSetLabel","originalFieldIndexMaster","originalFields","isInPreviewMode","savePreviewEditButtonType","saveSuccessfulLabel","saveFailedLabel","saveStatus","computed","itemName","get","fetchData","self","console","log","baseUrl","permissions","load","fetch","then","response","json","result","Name","Description","MetadataSets","updateBindings","values","setLanguageLabels","setOriginalFields","error","performMCButtonAction","event","option","saveForm","preventDefault","validForm","forms","getElementsByClassName","Array","prototype","filter","call","form","checkValidity","stopPropagation","classList","add","method","headers","body","res","ok","setTimeout","bind","$","each","i","e","nestable","maxDepth","group","callback","l","id","attr","items","notifications","push","status","type","sites","nextTick","tmp","language","changeButtonLabel","newLabel","entries","index","metadataSet","Fields","field","flattened","Object","keys","some","$set","count","startingIndex","matched","setStaticItems","BUTTON_OPTION_LABELS","DROPDOWN_BUTTON_LABEL","ACTIVE_OPTION_LABEL","SECTION_LABEL_1","SECTION_LABEL_2","METADATASET_LABEL","SAVE_SUCCESSFUL_LABEL","SAVE_FAILED_LABEL","updated","window","location","href","substring","lastIndexOf","ready","tooltip","selector"],"mappings":"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","file":"editItemBundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"editItemBundle\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./wwwroot/assets/js/catfish.edititem.js\",\"vendorsManagerSide\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","//import { VueEditor } from \"vue2-editor\";\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport StaticItems from '../static/string-values.json';\r\n/**\r\n * Javascript Vue code for creating a single item edit layout in ItemEdit.cshtml.\r\n */\r\n\r\n/**\r\n * This check makes sure the file is only run on the page with\r\n * the element. Not a huge deal, can be removed if it's causing issues.\r\n */\r\nif (document.getElementById(\"item-edit-page\")) {\r\n\r\n    Vue.component('item-field-component', {\r\n        props: ['fieldData', 'isInPreviewMode'],\r\n        data() {\r\n            return {\r\n                //key-value pairs of input types from the database and their associated\r\n                //input type\r\n                inputTypes: {\r\n                    \"text\": \"Catfish.Core.Models.Contents.Fields.TextField\",\r\n                    \"textarea\": \"Catfish.Core.Models.Contents.Fields.TextArea\",\r\n                    \"date\": \"Catfish.Core.Models.Contents.Fields.DateField\",\r\n                    \"integer\": \"Catfish.Core.Models.Contents.Fields.IntegerField\",\r\n                    \"decimal\": \"Catfish.Core.Models.Contents.Fields.DecimalField\",\r\n                },\r\n                fieldRequiredLabel: '',\r\n                valueLabel: '',\r\n                deleteLabel: '',\r\n                testField: {\r\n                    Values: [],\r\n                    Type: ''\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Adds another entry set to the field\r\n             */\r\n            addNewValue() {\r\n\r\n                //let newEntry = JSON.parse( JSON.stringify(this.fieldData.Values.$values[0]) );\r\n                //newEntry.Id = uuidv1();\r\n\r\n                ////TODO need to check this for Date, Integer, etc, the structure is different\r\n                //for (let item of newEntry.Values.$values) {\r\n                //    item.Value = \"\";\r\n                //}\r\n\r\n                //this.fieldData.Values.$values.splice(this.fieldData.Values.$values.length, 0, newEntry);\r\n\r\n                let newEntry = JSON.parse(JSON.stringify(this.testField.Values[0]));\r\n                newEntry.Id = uuidv1();\r\n\r\n                //TODO need to check this for Date, Integer, etc, the sfor (let item of newEntry.Values.$values) {\r\n                newEntry.Value = \"\";\r\n\r\n                this.testField.Values.splice(this.testField.Values.length, 0, newEntry);\r\n\r\n            },\r\n\r\n            /**\r\n             * Deletes the field from the item\r\n             */\r\n            deleteField() {\r\n                //this.metadataSets[metadataSetId].Fields.$values.splice(fieldId, 1);\r\n                //this.setOriginalFields();\r\n            },\r\n        },\r\n\r\n        mounted() {\r\n            //first index request is for language, second is values per language\r\n            //so therefore, this is the values for a single language\r\n\r\n            //therefore, to handle multiple languages - each one flattened?\r\n            //some variable need to hold the keys for each language - maybe is just indices though?\r\n            //\r\n            if (this.testField.Values.length <= 0 && this.fieldData.Values.$values[0].hasOwnProperty('Values')) {\r\n                this.testField.Values = this.fieldData.Values.$values[0].Values.$values;\r\n                this.testField.Type = this.fieldData.$type;\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.fieldRequiredLabel = StaticItems.managerSideValues.editItemLabels.FIELD_REQUIRED_LABEL;\r\n            this.valueLabel = StaticItems.managerSideValues.editItemLabels.VALUE_LABEL;\r\n            this.deleteLabel = StaticItems.managerSideValues.editItemLabels.DELETE_LABEL;\r\n        },\r\n        template: `\r\n        <div class=\"sitemap-item\">\r\n            <div class=\"link\">\r\n                <div class=\"flexer\">\r\n                    <div class=\"flexer\" v-for=\"(val, index) in fieldData.Name.Values.$values\">\r\n                        <h3 v-if=\"index >0 && index < fieldData.Name.Values.$values.length\" style=\"white-space: pre\"> | </h3>\r\n                        <h3>{{fieldData.Name.Values.$values[index].Value}}</h3>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-row\" v-for=\"(val, index) in fieldData.Name.Values.$values\">\r\n                    <div class=\"label-holder\">\r\n                        <!--<div>{{languageLabels[index]}}/{{fieldData.Name.Values.$values[index].Language}}:</div>-->\r\n                        <button v-if=\"!isInPreviewMode\" type=\"button\" class=\"btn-sm btn-primary btn-circle\"\r\n                        data-toggle=\"tooltip\" data-placement=\"top\"\r\n                        :title=\"fieldData.Description.Values.$values[index].Value\">\r\n                            <i class=\"fas fa-question\"></i>\r\n                        </button>\r\n                     </div>\r\n                     <!--\r\n                     Note to self about the value in this element:\r\n                     field.values[index].values[0].value\r\n                   - The first values is an array of objects. Those objects are for\r\n                     each field's language.\r\n                   - The next values is an array of that field language, but there seems to\r\n                     be no way this would ever increase past 1 item in the array. So therefore,\r\n                     the index is always set to 0.\r\n                     -->\r\n                     <div v-if=\"!isInPreviewMode\" class=\"col-md-4 mb-3 metadata-input\">\r\n<div v-if=\"fieldData.$type.includes(inputTypes.text)\" v-for=\"(fieldValue, fieldValueIndex) of testField.Values\"> <!-- fieldData.Values.$values[index].Values.$values[0].Value -->\r\n                        <input\r\n                        required type=\"text\" class=\"form-control\"\r\n                        v-model=\"testField.Values[fieldValueIndex].Value\"\r\n                        >\r\n                        <div class=\"btn-group new-value-button\" role=\"group\">\r\n                            <button :disabled=\"testField.Values.length <= 1\"\r\n                                type=\"button\" v-on:click=\"deleteField()\"\r\n                                class=\"btn btn-sm btn-danger btn-labeled trash-button\">\r\n                                <i class=\"fas fa-trash\"></i>\r\n                                {{deleteLabel}}\r\n                            </button>\r\n                        </div>\r\n</div>\r\n<div>{{testField}}</div>\r\n<!--\r\n                        <textarea v-else-if=\"fieldData.$type.includes(inputTypes.textarea)\"\r\n                        required class=\"form-control\" rows=\"3\"\r\n                        v-model=\"fieldData.Values.$values[index].Values.$values[0].Value\"></textarea>\r\n                        <input type=\"date\" v-else-if=\"fieldData.$type.includes(inputTypes.date)\"\r\n                        v-model=\"fieldData.Values.$values[index].Value\"\r\n                        required class=\"form-control\">\r\n                        <input type=\"number\" v-else-if=\"fieldData.$type.includes(inputTypes.integer)\"\r\n                        v-model=\"fieldData.Values.$values[index].Value\"\r\n                        required class=\"form-control\">-->\r\n                        <!--TODO need to come back and adjust this for better decimal functionality -->\r\n                        <!--<input type=\"number\" step=\".01\" v-else-if=\"fieldData.$type.includes(inputTypes.decimal)\"\r\n                        required class=\"form-control\" v-model=\"fieldData.Values.$values[index].Value\">-->\r\n                        <!--<vue-editor v-else-if=\"fieldData.$type.includes(inputTypes.textarea)\r\n                                v-model=\"fieldData.Values.$values[index].Values.$values[0].Value\">\r\n                        </vue-editor>-->\r\n                            <div class=\"invalid-feedback\">\r\n                                {{fieldRequiredLabel}}\r\n                            </div>\r\n                        </div>\r\n                        <div v-else>\r\n                            <div v-if=\"fieldData.Values.$values[index].hasOwnProperty('Values')\">\r\n                                {{fieldData.Values.$values[index].Values.$values[0].Value}}\r\n                            </div>\r\n                            <div v-else>\r\n                                <span>\r\n                                    {{fieldData.Values.$values[index].Value}} <!--.Values.$values[0].Value-->\r\n                                </span>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div v-if=\"piranha.permissions.pages.add\" class=\"add-value-container\">\r\n                    <div class=\"btn-group new-value-button\" role=\"group\">\r\n                        <button type=\"button\" v-on:click=\"addNewValue()\"\r\n                                class=\"btn btn-sm btn-primary btn-labeled\">\r\n                            <i class=\"fas fa-plus\"></i>\r\n                            {{valueLabel}}\r\n                        </button>\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n\r\n            </div>\r\n    `\r\n    });\r\n\r\n    piranha.itemlist = new Vue({\r\n        el: '#item-edit-page',\r\n        /*components: {\r\n            VueEditor\r\n        },*/\r\n        data() {\r\n            return {\r\n                //api strings\r\n                getString: \"manager/api/items/\",\r\n                postString: \"manager/items/save\",\r\n\r\n                content: \"<h1>Some initial content</h1>\",\r\n\r\n                loading: true,\r\n                item: null,\r\n                itemId: null,\r\n                nameAttribute: null,\r\n                descriptionAttribute: null,\r\n                buttonOptions: [],\r\n                //label for multichoice dropdown button\r\n                mcDropdownButtonLabel: \"\",\r\n                activeOption: \"\",\r\n\r\n                //bring this in from somewhere else, will have ALL language abbreviations in it\r\n                languages: {\r\n                    en: \"English\",\r\n                    fr: \"Français\",\r\n                    sp: \"Español\"\r\n                },\r\n                DEFAULT_LANGUAGE: 'en',\r\n                //array for displaying language labels listed in received JSON\r\n                //im assuming here that all fields will have the\r\n                //same languages enabled, since languages are enabled sitewide\r\n                languageLabels: [],\r\n\r\n                sections: [\r\n                    {\r\n                        title: ''\r\n                    },\r\n                    {\r\n                        title: ''\r\n                    },\r\n                ],\r\n\r\n                metadataSets: [],\r\n                metadataSets_type: null,\r\n                metadataSetLabel: \"Metadata Sets\",\r\n\r\n                //stores the first time a field appears in the fields of a metadata set\r\n                //this would be better handled by using child components but \r\n                //project structure for Vue stuff is really weird...\r\n                originalFieldIndexMaster: [],\r\n                originalFields: [],\r\n                isInPreviewMode: false,\r\n                savePreviewEditButtonType: \"submit\",\r\n\r\n                saveSuccessfulLabel: \"Saved!\",\r\n                saveFailedLabel: \"Failed to Save\",\r\n                saveStatus: 0,\r\n            }\r\n        },\r\n        computed: {\r\n            itemName: {\r\n                get: function () {\r\n                    return this.nameAttribute.Values.$values[0].Value || \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n        methods: {\r\n            /**\r\n             * Fetches the data associated with the item's ID\r\n             **/\r\n            fetchData() {\r\n                var self = this;\r\n                console.log(piranha.baseUrl + this.getString + this.itemId);\r\n                piranha.permissions.load(function () {\r\n                    fetch(piranha.baseUrl + self.getString + self.itemId)\r\n                        .then(function (response) { return response.json(); })\r\n                        .then(function (result) {\r\n                            self.item = result;\r\n                            console.log(\"json received:\", self.item);\r\n                            self.nameAttribute = result.Name;\r\n                            self.descriptionAttribute = result.Description;\r\n                            self.metadataSets = result.MetadataSets.$values;\r\n                            self.metadataSets_type = result.MetadataSets.$type;\r\n                            self.updateBindings = true;\r\n\r\n                            self.sections[0].values = self.nameAttribute.Values.$values;\r\n                            self.sections[1].values = self.descriptionAttribute.Values.$values;\r\n\r\n                            //prepare language labels\r\n                            self.setLanguageLabels(self.sections);\r\n\r\n                            //track original field indices\r\n                            self.setOriginalFields();\r\n\r\n                        })\r\n                        .catch(function (error) { console.log(\"error:\", error); });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Perform the action the multichoice button states.\r\n             * @param {any} event\r\n             */\r\n            performMCButtonAction(event, option) {\r\n                switch (option) {\r\n                    case this.buttonOptions[0]:\r\n                        this.saveForm(event);\r\n                        break;\r\n                    case this.buttonOptions[1]:\r\n                        //edit view\r\n                        this.isInPreviewMode = false;\r\n                        break;\r\n                    case this.buttonOptions[2]:\r\n                        //preview view\r\n                        this.isInPreviewMode = true;\r\n                        break;\r\n                }\r\n                this.activeOption = option;\r\n\t\t\t},\r\n\r\n            /**\r\n             * Saves the form, calls the API to send the data to.\r\n             * @param {any} event\r\n             */\r\n            saveForm(event) {\r\n                event.preventDefault();\r\n                let validForm = true;\r\n\r\n                //do form validation here and dont submit if problems\r\n                var forms = document.getElementsByClassName('edit-form');\r\n                // Loop over them and prevent submission\r\n                Array.prototype.filter.call(forms, function (form) {\r\n                        if (form.checkValidity() === false) {\r\n                            event.preventDefault();\r\n                            event.stopPropagation();\r\n                            validForm = false;\r\n                        }\r\n                        console.log(\"form validated\");\r\n                        form.classList.add('was-validated');\r\n                });\r\n\r\n                if (validForm) {\r\n                    this.item.Name = this.nameAttribute;\r\n                    this.item.Description = this.descriptionAttribute;\r\n                    this.item.MetadataSets = {\r\n                        $type: this.metadataSets_type,\r\n                        $values: this.metadataSets,\r\n\r\n                    };\r\n\r\n                    console.log(\"item being posted is here:\", this.item);\r\n\r\n                    fetch(piranha.baseUrl + this.postString,\r\n                        {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(this.item)\r\n                        })\r\n                        .then((res) =>  {\r\n                            if (res.ok) {\r\n                                this.saveStatus = 1;\r\n                                console.log(\"????\");\r\n                                setTimeout(() => { this.saveStatus = 0; }, 3000);\r\n                            } else {\r\n                                this.saveStatus = -1;\r\n                                console.log(\"!!!!!\");\r\n                            }\r\n                            console.log(\"res\",res);\r\n                            return res;\r\n                        })\r\n                        .then(function (data) { /*alert(JSON.stringify(data))*/ })\r\n                        .catch((error) => {\r\n                            console.error('Error:', error);\r\n                        });\r\n\t\t\t\t}\r\n                \r\n\t\t\t},\r\n\r\n            bind() {\r\n                var self = this;\r\n\r\n                $(\".sitemap-container\").each(function (i, e) {\r\n                    $(e).nestable({\r\n                        maxDepth: 100,\r\n                        group: i,\r\n                        callback: function (l, e) {\r\n                            fetch(piranha.baseUrl + \"manager/api/page/move\", {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    id: $(e).attr(\"data-id\"),\r\n                                    items: $(l).nestable(\"serialize\")\r\n                                })\r\n                            })\r\n                                .then(function (response) { return response.json(); })\r\n                                .then(function (result) {\r\n                                    piranha.notifications.push(result.status);\r\n\r\n                                    if (result.status.type === \"success\") {\r\n                                        $('.sitemap-container').nestable('destroy');\r\n                                        self.sites = [];\r\n                                        Vue.nextTick(function () {\r\n                                            self.sites = result.sites;\r\n                                            Vue.nextTick(function () {\r\n                                                self.bind();\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(\"error:\", error);\r\n                                });\r\n                        }\r\n                    })\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Sets the initial language labels youll need for the item.\r\n             * @param {any} sections\r\n             */\r\n            setLanguageLabels(sections) {\r\n                for (let item of sections[0].values) {\r\n                    let tmp = this.languages[item.language];\r\n                    if (typeof tmp === 'undefined') {\r\n                        tmp = this.languages[this.DEFAULT_LANGUAGE];\r\n\t\t\t\t\t}\r\n                    this.languageLabels.push(tmp);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Changes the multichoice button's title to the\r\n             * pass parameter (user chose it from the dropdown)\r\n             * @param {any} newLabel the new label for the button\r\n             */\r\n            changeButtonLabel(newLabel) {\r\n                this.mcDropdownButtonLabel = newLabel;\r\n                if (this.mcDropdownButtonLabel === this.buttonOptions[0]) {\r\n                    this.savePreviewEditButtonType = \"submit\";\r\n                } else {\r\n                    this.savePreviewEditButtonType = \"button\";\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n            /**\r\n             * Stores the indices of the first original version of a field.\r\n             * This is useful for knowing which fields will not be able to be deleted\r\n             * because they are the original version to be shown to the user.\r\n             * If they were able to be deleted, there would be no way to show that field again!\r\n             **/\r\n            setOriginalFields() {\r\n                this.originalFieldIndexMaster.splice(0);\r\n                this.originalFields.splice(0);\r\n\r\n                for (let [index, metadataSet] of this.metadataSets.entries()) {\r\n                    this.originalFieldIndexMaster.splice(this.originalFieldIndexMaster.length, 1, {});\r\n                    this.originalFields.splice(this.originalFields, 1, []); \r\n\r\n                    for (let [i, field] of metadataSet.Fields.$values.entries()) {\r\n                        //if field differs from fields in originalFieldIndexMaster,\r\n                        //track as a new field\r\n                        var flattened = Object.keys(this.originalFieldIndexMaster[index]);\r\n\r\n                        if (this.originalFieldIndexMaster[index].length === 0\r\n                            || !flattened.some(item => item === field.Id) ) {\r\n\r\n                            this.$set(this.originalFieldIndexMaster[index], field.Id, {\r\n                                field: field.Id,\r\n                                count: 1,\r\n                                startingIndex: null\r\n                            });\r\n                            this.$set(this.originalFieldIndexMaster[index][field.Id], 'startingIndex', i);\r\n                            this.originalFields[index].splice(this.originalFields[index].length, 1, i); \r\n                        }else {\r\n                            //add to count of whichever is already in the object\r\n                            //this needs to be checked to see if it works\r\n                            var matched = flattened.filter((item, index) => {\r\n                                if (item === field.Id) {\r\n                                    return item;\r\n\t\t\t\t\t\t\t\t}\r\n                            });\r\n\r\n                            this.$set(this.originalFieldIndexMaster[index][matched[0]], 'count', \r\n                                this.originalFieldIndexMaster[index][matched[0]].count + 1);\r\n\t                    }\r\n\t\t\t\t\t}\r\n                    console.log(\"originalFieldIndexMaster:\", this.originalFieldIndexMaster);\r\n                    console.log(\"indices: \", this.originalFields);\r\n                }\r\n\r\n            },\r\n\r\n            setStaticItems() {\r\n                this.buttonOptions = StaticItems.managerSideValues.editItemLabels.BUTTON_OPTION_LABELS;\r\n                this.mcDropdownButtonLabel = StaticItems.managerSideValues.editItemLabels.DROPDOWN_BUTTON_LABEL;\r\n                this.activeOption = StaticItems.managerSideValues.editItemLabels.ACTIVE_OPTION_LABEL;\r\n                this.sections[0].title = StaticItems.managerSideValues.editItemLabels.SECTION_LABEL_1;\r\n                this.sections[1].title = StaticItems.managerSideValues.editItemLabels.SECTION_LABEL_2;\r\n                this.metadataSetLabel = StaticItems.managerSideValues.editItemLabels.METADATASET_LABEL;\r\n                this.saveSuccessfulLabel = StaticItems.managerSideValues.editItemLabels.SAVE_SUCCESSFUL_LABEL;\r\n                this.saveFailedLabel = StaticItems.managerSideValues.editItemLabels.SAVE_FAILED_LABEL;\r\n\r\n\t\t\t}\r\n        },\r\n        updated() {\r\n            if (this.updateBindings) {\r\n                this.bind();\r\n                this.updateBindings = false;\r\n            }\r\n\r\n            this.loading = false;\r\n        },\r\n        created() {\r\n            this.itemId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\r\n            this.setStaticItems();\r\n            //call api\r\n            this.fetchData();\r\n        },\r\n        mounted() {\r\n\r\n            //initializes all tooltips\r\n            $(document).ready(function () {\r\n                $(\"body\").tooltip({ selector: '[data-toggle=tooltip]' });\r\n            });\r\n\t\t}\r\n    })\r\n}"],"sourceRoot":""}