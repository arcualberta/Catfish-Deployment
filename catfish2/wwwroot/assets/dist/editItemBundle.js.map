{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./wwwroot/assets/js/catfish.edititem.js"],"names":["document","getElementById","Vue","component","props","data","inputTypes","fieldRequiredLabel","valueLabel","deleteLabel","uniqueIdForField","methods","addNewValue","valueObjToCopy","Object","values","fieldData","ValueGroups","newEntry","JSON","parse","stringify","val","Value","Id","uuidv1","newEntryId","$set","ValueIds","splice","length","deleteField","fieldValueId","indexToRemove","indexOf","console","log","created","StaticItems","managerSideValues","editItemLabels","FIELD_REQUIRED_LABEL","VALUE_LABEL","DELETE_LABEL","template","piranha","itemlist","el","getString","postString","content","loading","item","itemId","nameAttribute","descriptionAttribute","buttonOptions","mcDropdownButtonLabel","activeOption","languages","en","fr","sp","DEFAULT_LANGUAGE","languageLabels","sections","title","metadataSets","metadataSets_type","metadataSetLabel","originalFieldIndexMaster","originalFields","isInPreviewMode","savePreviewEditButtonType","saveSuccessfulLabel","saveFailedLabel","saveFieldsRequiredLabel","saveStatus","validForm","computed","itemName","get","fetchData","self","baseUrl","permissions","load","fetch","then","response","json","result","Name","Description","MetadataSets","updateBindings","value","setLanguageLabels","error","performMCButtonAction","event","option","saveForm","validateForm","validity","$refs","myForm","checkValidity","classList","add","preventDefault","method","headers","body","res","ok","setTimeout","bind","$","each","i","e","nestable","maxDepth","group","callback","l","id","attr","items","notifications","push","status","type","sites","nextTick","tmp","Language","changeButtonLabel","newLabel","setOriginalFields","entries","index","metadataSet","Fields","$values","field","flattened","keys","some","count","startingIndex","matched","filter","setStaticItems","BUTTON_OPTION_LABELS","DROPDOWN_BUTTON_LABEL","ACTIVE_OPTION_LABEL","SECTION_LABEL_1","SECTION_LABEL_2","METADATASET_LABEL","SAVE_SUCCESSFUL_LABEL","SAVE_FAILED_LABEL","updated","window","location","href","substring","lastIndexOf","mounted","ready","tooltip","selector"],"mappings":"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","file":"editItemBundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"editItemBundle\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./wwwroot/assets/js/catfish.edititem.js\",\"vendorsManagerSide\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","//import { VueEditor } from \"vue2-editor\";\r\nimport { v1 as uuidv1 } from 'uuid';\r\nimport StaticItems from '../static/string-values.json';\r\n/**\r\n * Javascript Vue code for creating a single item edit layout in ItemEdit.cshtml.\r\n */\r\n\r\n/**\r\n * This check makes sure the file is only run on the page with\r\n * the element. Not a huge deal, can be removed if it's causing issues.\r\n */\r\nif (document.getElementById(\"item-edit-page\")) {\r\n\r\n    Vue.component('item-field-component', {\r\n        props: ['fieldData', 'isInPreviewMode', 'languageLabels'],\r\n        data() {\r\n            return {\r\n                //key-value pairs of input types from the database and their associated\r\n                //input type\r\n                inputTypes: {\r\n                    \"text\": \"Catfish.Core.Models.Contents.Fields.TextField\",\r\n                    \"textarea\": \"Catfish.Core.Models.Contents.Fields.TextArea\",\r\n                    \"date\": \"Catfish.Core.Models.Contents.Fields.DateField\",\r\n                    \"integer\": \"Catfish.Core.Models.Contents.Fields.IntegerField\",\r\n                    \"decimal\": \"Catfish.Core.Models.Contents.Fields.DecimalField\",\r\n                },\r\n                fieldRequiredLabel: '',\r\n                valueLabel: '',\r\n                deleteLabel: '',\r\n                \r\n                //temp so ids are unique per field, they will be with real data\r\n                uniqueIdForField: '',\r\n\r\n            }\r\n        },\r\n        methods: {\r\n            /**\r\n             * Adds another entry set to the field\r\n             */\r\n            addNewValue() {\r\n                let valueObjToCopy = Object.values(this.fieldData.ValueGroups)[0];\r\n                let newEntry = JSON.parse(JSON.stringify(valueObjToCopy));\r\n                for (let val of newEntry) {\r\n                    val.Value = \"\";\r\n                    val.Id = uuidv1();\r\n                }\r\n                let newEntryId = uuidv1();\r\n                this.$set(this.fieldData.ValueGroups, newEntryId, newEntry);\r\n                this.fieldData.ValueIds.splice(this.fieldData.ValueIds.length, 0, newEntryId);\r\n                \r\n\r\n            },\r\n\r\n            /**\r\n             * Deletes the field from the item\r\n             */\r\n            deleteField(fieldValueId) {\r\n                //this.metadataSets[metadataSetId].Fields.$values.splice(fieldId, 1);\r\n                //this.setOriginalFields();\r\n                let indexToRemove = this.fieldData.ValueIds.indexOf(fieldValueId);\r\n                this.fieldData.ValueIds.splice(indexToRemove, 1);\r\n\r\n                delete this.fieldData.ValueGroups[fieldValueId]\r\n                   \r\n                console.log(this.fieldData);\r\n            }\r\n        },\r\n\r\n        created() {\r\n            this.fieldRequiredLabel = StaticItems.managerSideValues.editItemLabels.FIELD_REQUIRED_LABEL;\r\n            this.valueLabel = StaticItems.managerSideValues.editItemLabels.VALUE_LABEL;\r\n            this.deleteLabel = StaticItems.managerSideValues.editItemLabels.DELETE_LABEL;\r\n        },\r\n        template: `\r\n        <div class=\"sitemap-item additional-spacing\">\r\n            <div class=\"link\">\r\n                <div class=\"flex-row\" v-for=\"(val, index) of fieldData.ValueIds\">\r\n                    \r\n                    <!--<div v-if=\"!isInPreviewMode\" class=\"col-md-4 mb-3 metadata-input\">-->\r\n\r\n                        <div v-if=\"fieldData.ModelType.includes(inputTypes.text)\" v-for=\"(fieldValue, fieldValueIndex) of fieldData.ValueGroups[val]\" class=\"metadata-input\">\r\n                            <div>\r\n                                <label :for=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"><h4>{{fieldData.Name[fieldValueIndex].Value}} </h4></label>\r\n                                <div v-if=\"!isInPreviewMode\">\r\n                                    <input :id=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"\r\n                                    required type=\"text\" class=\"form-control\"\r\n                                    v-model=\"fieldValue.Value\"\r\n                                    >\r\n                                    <div class=\"invalid-feedback\">\r\n                                        This field is required.\r\n                                    </div>\r\n                                </div>\r\n                                <div v-else>\r\n                                    <div>{{fieldValue.Value}}</div>\r\n                                </div>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\" class=\"btn-group float-right-button space-above\" role=\"group\">\r\n                                <button :disabled=\"fieldData.ValueIds.length <= 1\"\r\n                                    type=\"button\" v-on:click=\"deleteField(val)\"\r\n                                    class=\"btn btn-sm btn-danger btn-labeled trash-button\">\r\n                                    <i class=\"fas fa-trash\"></i>\r\n                                    {{deleteLabel}}\r\n                                </button>\r\n                            </div>\r\n                            <hr style=\"width: 100%; display:inline-flex;\">\r\n                        </div>\r\n                        \r\n                        <div v-else-if=\"fieldData.ModelType.includes(inputTypes.textarea)\" v-for=\"(fieldValue, fieldValueIndex) of fieldData.ValueGroups[val]\" class=\"metadata-input\">\r\n                            <div>\r\n                                <label :for=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"><h4>{{fieldData.Name[fieldValueIndex].Value}} </h4></label>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\">\r\n                                <textarea :id=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"\r\n                                required class=\"form-control\" rows=\"3\"\r\n                                v-model=\"fieldValue.Value\"></textarea>\r\n                                <div class=\"invalid-feedback\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <div>{{fieldValue.Value}}</div>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\" class=\"btn-group float-right-button space-above\" role=\"group\">\r\n                                <button :disabled=\"fieldData.ValueIds.length <= 1\"\r\n                                    type=\"button\" v-on:click=\"deleteField(val)\"\r\n                                    class=\"btn btn-sm btn-danger btn-labeled trash-button\">\r\n                                    <i class=\"fas fa-trash\"></i>\r\n                                    {{deleteLabel}}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div v-else-if=\"fieldData.ModelType.includes(inputTypes.date)\" v-for=\"(fieldValue, fieldValueIndex) of fieldData.ValueGroups[val]\" class=\"metadata-input\">\r\n                            <div>\r\n                                <label :for=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"><h4>{{fieldData.Name[fieldValueIndex].Value}} </h4></label>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\">\r\n                                <input type=\"date\" \r\n                                v-model=\"fieldValue.Value\" required class=\"form-control\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <div>\r\n                                    {{fieldValue.Value}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div v-else-if=\"fieldData.ModelType.includes(inputTypes.integer)\" v-for=\"(fieldValue, fieldValueIndex) of fieldData.ValueGroups[val]\" class=\"metadata-input\">\r\n                            <div>\r\n                                <label :for=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"><h4>{{fieldData.Name[fieldValueIndex].Value}} </h4></label>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\">\r\n                                <input type=\"number\" v-if=\"!isInPreviewMode\"\r\n                                v-model=\"fieldValue.Value\" required class=\"form-control\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <div>\r\n                                    {{fieldValue.Value}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!--TODO need to come back and adjust this for better decimal functionality -->\r\n                        <div v-else-if=\"fieldData.ModelType.includes(inputTypes.decimal)\" v-for=\"(fieldValue, fieldValueIndex) of fieldData.ValueGroups[val]\" class=\"metadata-input\">\r\n                            <div>\r\n                                <label :for=\"val + '-index-' + fieldValueIndex + '-' + index + fieldValue.Id\"><h4>{{fieldData.Name[fieldValueIndex].Value}} </h4></label>\r\n                            </div>\r\n                            <div v-if=\"!isInPreviewMode\">\r\n                                <input type=\"number\" step=\".01\"\r\n                                required class=\"form-control\" v-model=\"fieldValue.Value\">\r\n                                <div class=\"invalid-feedback\">\r\n                                    This field is required.\r\n                                </div>\r\n                            </div>\r\n                            <div v-else>\r\n                                <div>\r\n                                    {{fieldValue.Value}}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"invalid-feedback\">\r\n                            {{fieldRequiredLabel}}\r\n                        </div>\r\n                    </div>\r\n                    <!--<div v-else>\r\n                        <span>\r\n                            {{fieldData.Value}} \r\n                        </span>\r\n                    </div>-->\r\n                <!--</div>-->\r\n                </div>\r\n                \r\n\r\n                <div v-if=\"piranha.permissions.pages.add && !isInPreviewMode\" class=\"add-value-container\">\r\n                    <div class=\"btn-group float-right-button\" role=\"group\">\r\n                        <button v-if=\"!fieldData.ModelType.includes(inputTypes.integer) && !fieldData.ModelType.includes(inputTypes.date)\" type=\"button\" v-on:click=\"addNewValue()\"\r\n                                class=\"btn btn-lg btn-primary btn-labeled\">\r\n                            <i class=\"fas fa-plus\"></i>\r\n                            {{valueLabel}}\r\n                        </button>\r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n\r\n            </div>\r\n    `\r\n    });\r\n\r\n    piranha.itemlist = new Vue({\r\n        el: '#item-edit-page',\r\n        /*components: {\r\n            VueEditor\r\n        },*/\r\n        data() {\r\n            return {\r\n                //api strings\r\n                getString: \"manager/api/items/\",\r\n                postString: \"manager/api/items\",//\"manager/items/save\",\r\n\r\n                content: \"<h1>Some initial content</h1>\",\r\n\r\n                loading: true,\r\n                item: null,\r\n                itemId: null,\r\n                nameAttribute: null,\r\n                descriptionAttribute: null,\r\n                buttonOptions: [],\r\n                //label for multichoice dropdown button\r\n                mcDropdownButtonLabel: \"\",\r\n                activeOption: \"\",\r\n\r\n                //bring this in from somewhere else, will have ALL language abbreviations in it\r\n                languages: {\r\n                    en: \"English\",\r\n                    fr: \"Français\",\r\n                    sp: \"Español\"\r\n                },\r\n                DEFAULT_LANGUAGE: 'en',\r\n                //array for displaying language labels listed in received JSON\r\n                //im assuming here that all fields will have the\r\n                //same languages enabled, since languages are enabled sitewide\r\n                languageLabels: [],\r\n\r\n                //using this because the root Name and Description display is the same, so i load them into this to display in a loop\r\n                sections: [\r\n                    {\r\n                        title: ''\r\n                    },\r\n                    {\r\n                        title: ''\r\n                    },\r\n                ],\r\n\r\n                metadataSets: [],\r\n                metadataSets_type: null,\r\n                metadataSetLabel: \"Metadata Sets\",\r\n\r\n                //stores the first time a field appears in the fields of a metadata set\r\n                //this would be better handled by using child components but \r\n                //project structure for Vue stuff is really weird...\r\n                originalFieldIndexMaster: [],\r\n                originalFields: [],\r\n                isInPreviewMode: false,\r\n                savePreviewEditButtonType: \"submit\",\r\n\r\n                saveSuccessfulLabel: \"Saved!\",\r\n                saveFailedLabel: \"Failed to Save\",\r\n                saveFieldsRequiredLabel: \"Some fields are required\",\r\n                saveStatus: 0,\r\n                validForm: true\r\n            }\r\n        },\r\n        computed: {\r\n            itemName: {\r\n                get: function () {\r\n                    return this.nameAttribute.Value || \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n        methods: {\r\n            /**\r\n             * Fetches the data associated with the item's ID\r\n             **/\r\n            fetchData() {\r\n                var self = this;\r\n                console.log(piranha.baseUrl + this.getString + this.itemId);\r\n                piranha.permissions.load(function () {\r\n                    fetch(piranha.baseUrl + self.getString + self.itemId)\r\n                        .then(function (response) { return response.json(); })\r\n                        .then(function (result) {\r\n                            self.item = result;\r\n                            console.log(\"json received:\", self.item);\r\n                            self.nameAttribute = result.Name;\r\n                            self.descriptionAttribute = result.Description;\r\n                            self.metadataSets = result.MetadataSets;\r\n                            self.updateBindings = true;\r\n\r\n                            self.sections[0].value = self.nameAttribute;\r\n                            self.sections[1].value = self.descriptionAttribute;\r\n\r\n                            //prepare language labels\r\n                            self.setLanguageLabels(self.sections);\r\n\r\n                            //track original field indices\r\n                            //self.setOriginalFields();\r\n\r\n                        })\r\n                        .catch(function (error) { console.log(\"error:\", error); });\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Perform the action the multichoice button states.\r\n             * @param {any} event\r\n             */\r\n            performMCButtonAction(event, option) {\r\n                switch (option) {\r\n                    case this.buttonOptions[0]:\r\n                        this.saveForm(event);\r\n                        break;\r\n                    case this.buttonOptions[1]:\r\n                        //edit view\r\n                        this.isInPreviewMode = false;\r\n                        break;\r\n                    case this.buttonOptions[2]:\r\n                        //preview view\r\n                        this.isInPreviewMode = true;\r\n                        break;\r\n                }\r\n                this.activeOption = option;\r\n            },\r\n\r\n            /**\r\n             * Checks the form for validity and displays required styles if invalid\r\n             * */\r\n            validateForm() {\r\n                let validity = this.$refs.myForm.checkValidity();\r\n                this.$refs.myForm.classList.add('was-validated');\r\n                return validity;\r\n            },\r\n\r\n            /**\r\n             * Saves the form, calls the API to send the data to.\r\n             * @param {any} event\r\n             */\r\n            saveForm(event) {\r\n                event.preventDefault();\r\n                this.validForm = this.validateForm();\r\n\r\n                //OLD - this is the Bootstrap way to do this, doesn't utilize Vue\r\n                //do form validation here and dont submit if problems\r\n                //var forms = document.getElementsByClassName('edit-form');\r\n                // Loop over them and prevent submission\r\n                //Array.prototype.filter.call(forms, function (form) {\r\n                //        if (form.checkValidity() === false) {\r\n                //            event.preventDefault();\r\n                //            event.stopPropagation();\r\n                //            validForm = false;\r\n                //        }\r\n                //        console.log(\"form validated\");\r\n                //        form.classList.add('was-validated');\r\n                //});\r\n\r\n                if (this.validForm) {\r\n                    console.log(\"item being posted is here:\", this.item);\r\n\r\n                    fetch(piranha.baseUrl + this.postString,\r\n                        {\r\n                            method: \"POST\",\r\n                            headers: {\r\n                                'Content-Type': 'application/json',\r\n                            },\r\n                            body: JSON.stringify(this.item)\r\n                        })\r\n                        .then((res) => {\r\n                            if (res.ok) {\r\n                                this.saveStatus = 1;\r\n                                console.log(\"????\");\r\n                                setTimeout(() => { this.saveStatus = 0; }, 3000);\r\n                            } else {\r\n                                this.saveStatus = -1;\r\n                                console.log(\"!!!!!\");\r\n                            }\r\n                            console.log(\"res\", res);\r\n                            return res;\r\n                        })\r\n                        .then(function (data) { /*alert(JSON.stringify(data))*/ })\r\n                        .catch((error) => {\r\n                            console.error('Error:', error);\r\n                        });\r\n                } else {\r\n                    console.log(\"form invalid\");\r\n                    this.saveStatus = -1;\r\n                }\r\n                \r\n\t\t\t},\r\n\r\n            bind() {\r\n                var self = this;\r\n\r\n                $(\".sitemap-container\").each(function (i, e) {\r\n                    $(e).nestable({\r\n                        maxDepth: 100,\r\n                        group: i,\r\n                        callback: function (l, e) {\r\n                            fetch(piranha.baseUrl + \"manager/api/page/move\", {\r\n                                method: \"post\",\r\n                                headers: {\r\n                                    \"Content-Type\": \"application/json\"\r\n                                },\r\n                                body: JSON.stringify({\r\n                                    id: $(e).attr(\"data-id\"),\r\n                                    items: $(l).nestable(\"serialize\")\r\n                                })\r\n                            })\r\n                                .then(function (response) { return response.json(); })\r\n                                .then(function (result) {\r\n                                    piranha.notifications.push(result.status);\r\n\r\n                                    if (result.status.type === \"success\") {\r\n                                        $('.sitemap-container').nestable('destroy');\r\n                                        self.sites = [];\r\n                                        Vue.nextTick(function () {\r\n                                            self.sites = result.sites;\r\n                                            Vue.nextTick(function () {\r\n                                                self.bind();\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                })\r\n                                .catch(function (error) {\r\n                                    console.log(\"error:\", error);\r\n                                });\r\n                        }\r\n                    })\r\n                });\r\n            },\r\n\r\n            /**\r\n             * Sets the initial language labels youll need for the item.\r\n             * @param {any} sections\r\n             */\r\n            setLanguageLabels(sections) {\r\n                for (let item of sections) {\r\n                    let tmp = this.languages[item.Language];\r\n                    if (typeof tmp === 'undefined') {\r\n                        tmp = this.languages[this.DEFAULT_LANGUAGE];\r\n\t\t\t\t\t}\r\n                    this.languageLabels.push(tmp);\r\n                }\r\n            },\r\n\r\n            /**\r\n             * Changes the multichoice button's title to the\r\n             * pass parameter (user chose it from the dropdown)\r\n             * @param {any} newLabel the new label for the button\r\n             */\r\n            changeButtonLabel(newLabel) {\r\n                this.mcDropdownButtonLabel = newLabel;\r\n                if (this.mcDropdownButtonLabel === this.buttonOptions[0]) {\r\n                    this.savePreviewEditButtonType = \"submit\";\r\n                } else {\r\n                    this.savePreviewEditButtonType = \"button\";\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n            /**\r\n             * Stores the indices of the first original version of a field.\r\n             * This is useful for knowing which fields will not be able to be deleted\r\n             * because they are the original version to be shown to the user.\r\n             * If they were able to be deleted, there would be no way to show that field again!\r\n             **/\r\n            setOriginalFields() {\r\n                this.originalFieldIndexMaster.splice(0);\r\n                this.originalFields.splice(0);\r\n\r\n                for (let [index, metadataSet] of this.metadataSets.entries()) {\r\n                    this.originalFieldIndexMaster.splice(this.originalFieldIndexMaster.length, 1, {});\r\n                    this.originalFields.splice(this.originalFields, 1, []); \r\n\r\n                    for (let [i, field] of metadataSet.Fields.$values.entries()) {\r\n                        //if field differs from fields in originalFieldIndexMaster,\r\n                        //track as a new field\r\n                        var flattened = Object.keys(this.originalFieldIndexMaster[index]);\r\n\r\n                        if (this.originalFieldIndexMaster[index].length === 0\r\n                            || !flattened.some(item => item === field.Id) ) {\r\n\r\n                            this.$set(this.originalFieldIndexMaster[index], field.Id, {\r\n                                field: field.Id,\r\n                                count: 1,\r\n                                startingIndex: null\r\n                            });\r\n                            this.$set(this.originalFieldIndexMaster[index][field.Id], 'startingIndex', i);\r\n                            this.originalFields[index].splice(this.originalFields[index].length, 1, i); \r\n                        }else {\r\n                            //add to count of whichever is already in the object\r\n                            //this needs to be checked to see if it works\r\n                            var matched = flattened.filter((item, index) => {\r\n                                if (item === field.Id) {\r\n                                    return item;\r\n\t\t\t\t\t\t\t\t}\r\n                            });\r\n\r\n                            this.$set(this.originalFieldIndexMaster[index][matched[0]], 'count', \r\n                                this.originalFieldIndexMaster[index][matched[0]].count + 1);\r\n\t                    }\r\n\t\t\t\t\t}\r\n                    console.log(\"originalFieldIndexMaster:\", this.originalFieldIndexMaster);\r\n                    console.log(\"indices: \", this.originalFields);\r\n                }\r\n\r\n            },\r\n\r\n            setStaticItems() {\r\n                this.buttonOptions = StaticItems.managerSideValues.editItemLabels.BUTTON_OPTION_LABELS;\r\n                this.mcDropdownButtonLabel = StaticItems.managerSideValues.editItemLabels.DROPDOWN_BUTTON_LABEL;\r\n                this.activeOption = StaticItems.managerSideValues.editItemLabels.ACTIVE_OPTION_LABEL;\r\n                this.sections[0].title = StaticItems.managerSideValues.editItemLabels.SECTION_LABEL_1;\r\n                this.sections[1].title = StaticItems.managerSideValues.editItemLabels.SECTION_LABEL_2;\r\n                this.metadataSetLabel = StaticItems.managerSideValues.editItemLabels.METADATASET_LABEL;\r\n                this.saveSuccessfulLabel = StaticItems.managerSideValues.editItemLabels.SAVE_SUCCESSFUL_LABEL;\r\n                this.saveFailedLabel = StaticItems.managerSideValues.editItemLabels.SAVE_FAILED_LABEL;\r\n\r\n\t\t\t}\r\n        },\r\n        updated() {\r\n            if (this.updateBindings) {\r\n                this.bind();\r\n                this.updateBindings = false;\r\n            }\r\n\r\n            this.loading = false;\r\n        },\r\n        created() {\r\n            this.itemId = window.location.href.substring(window.location.href.lastIndexOf('/') + 1);\r\n            this.setStaticItems();\r\n            //call api\r\n            this.fetchData();\r\n        },\r\n        mounted() {\r\n\r\n            //initializes all tooltips TODO put these back in, they were lost - or don't?\r\n            $(document).ready(function () {\r\n                $(\"body\").tooltip({ selector: '[data-toggle=tooltip]' });\r\n            });\r\n\t\t}\r\n    })\r\n}"],"sourceRoot":""}